{"version":3,"sources":["components/NavBar/NavBar.tsx","components/ProductsContext/ProductsContext.tsx","helpers/getFunctions/searchHelper.ts","components/SearchBar/SearchBar.tsx","components/Header/Header.tsx","components/Main/Main.tsx","helpers/getFunctions/getUniqueld.tsx","components/ProductCard/ProductCard.tsx","components/ProductsSlider/ProductsSlider.tsx","api/getProducts.tsx","helpers/getFunctions/getHotPriceProducts.tsx","components/ImageSlider/ImageSlider.tsx","helpers/getFunctions/getProductsByType.tsx","components/CategoryCard/CategoryCard.tsx","components/ShopByCategory/ShopByCategory.tsx","components/Loader/Loader.tsx","pages/HomePage/HomePage.tsx","helpers/getFunctions/getNewProducts.tsx","components/ProductsList/ProductsList.tsx","components/NoResult/NoResult.tsx","components/FilterPanel/FilterPanel.tsx","components/NavMap/NavMap.tsx","components/ProductsHeader/ProductsHeader.tsx","components/PageControl/PageControl.tsx","components/ProductsCatalog/ProductsCatalog.tsx","helpers/getFunctions/getPreparitionProducts.ts","pages/PhonesPage/PhonesPage.tsx","pages/TabletsPage/TabletsPage.tsx","pages/AccessoriesPage/AccessoriesPage.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/Footer/Footer.tsx","components/Menu/Menu.tsx","pages/FavoritesPage/FavoritesPage.tsx","components/CartCard/CartCard.tsx","components/CartList/CartList.tsx","components/CartTotalBar/CartTotalBar.tsx","pages/CartPage/CartPage.tsx","App.tsx","index.tsx"],"names":["NavBar","toggleMenu","handleNalLink","className","onClick","isActive","classNames","to","defaultProps","initiatFavorites","initiatcarts","ProductsContext","React","createContext","favorites","setFavorites","carts","setCarts","ProductsProvider","children","useState","useEffect","savedFavorites","localStorage","getItem","JSON","parse","savedCarts","setItem","stringify","value","useMemo","Provider","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","delete","Array","isArray","part","append","set","SearchBar","sectionName","useSearchParams","searchParams","setSearchParams","queryInput","setQueryInput","isOpenInput","setIsOpenInput","hanldeInputQuery","event","params","query","target","page","search","setSearchWith","type","onChange","placeholder","style","transform","Header","useContext","totalItems","reduce","accumulator","currentItem","quantity","isSearchBarActive","setIsSearchBarActive","location","useLocation","namePage","pathname","split","length","Main","getUniqueId","Math","random","ProductCard","product","isFavorite","find","productCurrent","id","isCart","labelAddCartBtn","src","image","alt","name","price","fullPrice","screen","capacity","ram","newCarts","filter","newFavorites","ProductsSlider","title","products","index","setIndex","offsetX","setOffsetX","countProducts","setCountProducts","productSlideRef","useRef","updateSlide","newOffsetX","newIndex","window","innerWidth","disabled","map","ref","API_URL","wait","delay","Promise","resolve","setTimeout","getProducts","a","then","fetch","response","json","ImageSlider","handleNextBtn","intervalId","setInterval","clearInterval","getProductsByType","productsFromServer","category","CategoryCard","count","setCount","isMounted","link","backgroundColor","imageUrl","ShopByCategory","Loader","HomePage","hotPriceProducts","setHotPriceProducts","newProducts","setNewProducts","isLoadingHotProducts","setIsLoadingHotProducts","isErrorHotProducts","setIsErrorHotProducts","isLoadingNewProducts","setIsLoadingNewProducts","isErrorNewProducts","setIsErrorNewProducts","sort","productFirst","productSecond","amountFirst","getHotProducts","catch","finally","year","getNewProducts","getSlider","isLoading","isError","ProductsList","NoResult","message","optionsSort","optionsItemsNumber","FilterPanel","get","itemsNumber","sortLabel","setSortLabel","isOpenSort","setIsOpenSort","isOpenItems","setIsOpenItems","onMouseDown","onBlur","option","e","preventDefault","handleSelectSort","itemsOnPage","handleSelectItemsNumber","NavMap","links","nameLinks","linkWords","linkWord","charAt","toUpperCase","slice","join","Fragment","ProductsHeader","PageControl","countPages","ceil","toTopPage","scrollTo","top","behavior","visblePages","pages","i","push","getVisblePages","pageValue","ProductsCatalog","sortedProducts","localeCompare","toLocaleLowerCase","includes","trim","getPreparitionProducts","start","end","visibleProducts","PhonesPage","phones","setPhones","setIsLoading","setIsError","TabletsPage","tablets","setTablets","AccessoriesPage","accessories","setAccessories","NotFoundPage","Footer","href","rel","Menu","FavoritesPage","CartCard","prevCarts","cartProduct","CartList","CartTotalBar","totalPrice","showMessage","CartPage","isMessage","setIsMessage","App","appMenu","document","querySelector","classList","toggle","body","path","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.590e4a35.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './NavBar.scss';\n\ntype Props = {\n  toggleMenu?: () => void;\n};\n\nexport const NavBar: React.FC<Props> = ({ toggleMenu }) => {\n  const handleNalLink = () => {\n    if (toggleMenu) {\n      toggleMenu();\n    }\n  };\n\n  return (\n    <nav className=\"nav nav__menu\">\n      <NavLink\n        onClick={handleNalLink}\n        className={({ isActive }) => (\n          classNames('nav__link', {\n            'nav__link--is-active': isActive,\n          })\n        )}\n        to=\"/\"\n      >\n        Home\n      </NavLink>\n\n      <NavLink\n        onClick={handleNalLink}\n        className={({ isActive }) => (\n          classNames('nav__link', {\n            'nav__link--is-active': isActive,\n          })\n        )}\n        to=\"/phones\"\n      >\n        Phones\n      </NavLink>\n\n      <NavLink\n        onClick={handleNalLink}\n        className={({ isActive }) => (\n          classNames('nav__link', {\n            'nav__link--is-active': isActive,\n          })\n        )}\n        to=\"/tablets\"\n      >\n        Tablets\n      </NavLink>\n\n      <NavLink\n        onClick={handleNalLink}\n        className={({ isActive }) => (\n          classNames('nav__link', {\n            'nav__link--is-active': isActive,\n          })\n        )}\n        to=\"/accessories\"\n      >\n        Accessories\n      </NavLink>\n    </nav>\n  );\n};\n\nNavBar.defaultProps = {\n  toggleMenu: () => {},\n};\n","import React, { useState, useMemo, useEffect } from 'react';\nimport { Product } from '../../types/Product';\nimport { CartProduct } from '../../types/CartProduct';\n\nconst initiatFavorites: Product[] = [];\nconst initiatcarts: CartProduct[] = [];\n\ninterface ProductsContextType {\n  favorites: Product[],\n  setFavorites: React.Dispatch<React.SetStateAction<Product[]>>;\n  carts: CartProduct[],\n  setCarts: React.Dispatch<React.SetStateAction<CartProduct[]>>;\n}\n\nexport const ProductsContext = React.createContext<ProductsContextType>({\n  favorites: initiatFavorites,\n  setFavorites: () => { },\n  carts: initiatcarts,\n  setCarts: () => { },\n});\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const ProductsProvider: React.FC<Props> = ({ children }) => {\n  const [favorites, setFavorites] = useState(initiatFavorites);\n  const [carts, setCarts] = useState(initiatcarts);\n\n  useEffect(() => {\n    const savedFavorites = localStorage.getItem('favorites');\n\n    if (savedFavorites) {\n      setFavorites(JSON.parse(savedFavorites));\n    }\n\n    const savedCarts = localStorage.getItem('carts');\n\n    if (savedCarts) {\n      setCarts(JSON.parse(savedCarts));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n    localStorage.setItem('carts', JSON.stringify(carts));\n  }, [favorites, carts]);\n\n  const value = useMemo(() => ({\n    favorites,\n    setFavorites,\n    carts,\n    setCarts,\n  }), [favorites, carts]);\n\n  return (\n    <ProductsContext.Provider value={value}>\n      {children}\n    </ProductsContext.Provider>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","/* eslint-disable react/button-has-type */\nimport React, { useState } from 'react';\n// import React, { useState } from 'react';\nimport './SearchBar.scss';\nimport { useSearchParams } from 'react-router-dom';\nimport {\n  SearchParams,\n  getSearchWith,\n} from '../../helpers/getFunctions/searchHelper';\n\ntype Props = {\n  sectionName: string,\n  className: string,\n};\n\nexport const SearchBar: React.FC<Props> = ({ sectionName, className }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [queryInput, setQueryInput] = useState('');\n  const [isOpenInput, setIsOpenInput] = useState(false);\n\n  function setSearchWith(params: SearchParams) {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  }\n\n  const hanldeInputQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const params = {\n      query: event.target.value,\n      page: '1',\n    };\n\n    setQueryInput(event.target.value);\n\n    setSearchWith(params);\n  };\n\n  return (\n    <>\n      <div className={`search-bar ${className}`}>\n        <div className=\"search-bar__onDesktop\">\n          <input\n            type=\"text\"\n            className=\"search-bar__input\"\n            onChange={(event) => hanldeInputQuery(event)}\n            value={queryInput}\n            placeholder={`Search in ${sectionName}...`}\n          />\n\n          <div className=\"icon__search search-bar__icon\" />\n        </div>\n\n        <button\n          onClick={() => setIsOpenInput(true)}\n          className=\"search-bar__toggle-btn\"\n        >\n          <div className=\"icon icon__search\" />\n        </button>\n\n        <div\n          className=\"search-bar__onMobile\"\n          style={{\n            transform: `translateX(${isOpenInput ? '0' : '-100%'})`,\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"search-bar__input search-bar__input\"\n            onChange={(event) => hanldeInputQuery(event)}\n            value={queryInput}\n            placeholder={`Search in ${sectionName}...`}\n          />\n\n          <button\n            onClick={() => setIsOpenInput(false)}\n            className=\"search-bar__toggle-btn\"\n          >\n            <div className=\"icon icon__close\" />\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n","/* eslint-disable react/button-has-type */\nimport React, { useContext, useEffect, useState } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { NavBar } from '../NavBar';\nimport './Header.scss';\nimport { ProductsContext } from '../ProductsContext';\nimport { SearchBar } from '../SearchBar';\n\ntype Props = {\n  toggleMenu: () => void,\n};\n\nexport const Header: React.FC<Props> = ({ toggleMenu }) => {\n  const { favorites, carts } = useContext(ProductsContext);\n  const totalItems = carts.reduce(\n    (accumulator, currentItem) => (\n      accumulator + currentItem.quantity\n    ), 0,\n  );\n\n  const [isSearchBarActive, setIsSearchBarActive] = useState(false);\n  const location = useLocation();\n  const namePage = location.pathname.split('/')[1];\n\n  useEffect(() => {\n    setIsSearchBarActive(\n      namePage === 'phones'\n      || namePage === 'tablets'\n      || namePage === 'accessories',\n    );\n  }, [location.pathname]);\n\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"header__content\">\n          <div className=\"header__logo-nav-bar\">\n            <NavLink\n              className=\"header__logo-link\"\n              to=\"/\"\n            >\n              <div className=\"header__logo icon-logo\" />\n            </NavLink>\n\n            <div className=\"header__nav\">\n              <NavBar />\n            </div>\n          </div>\n\n          <div className=\"header__rigth-part\">\n            {isSearchBarActive && (\n              <SearchBar\n                className=\"header__search-bar\"\n                sectionName={namePage}\n              />\n            )}\n\n            <div className=\"header__favorites-cart-wrapper\">\n              <NavLink\n                className={({ isActive }) => (\n                  classNames('header__link', {\n                    'header__link--is-active': isActive,\n                  })\n                )}\n                to=\"/favorites\"\n              >\n                <div className=\"icon icon__favorites\">\n                  <div\n                    className={classNames(\n                      'icon__label-count',\n                      {\n                        'icon__label-count--display-none':\n                          favorites.length === 0,\n                      },\n                    )}\n                  >\n                    {favorites.length}\n                  </div>\n                </div>\n              </NavLink>\n\n              <NavLink\n                className={({ isActive }) => (\n                  classNames('header__link', {\n                    'header__link--is-active': isActive,\n                  })\n                )}\n                to=\"/cart\"\n              >\n                <div className=\"icon icon__cart\">\n                  <div\n                    className={classNames(\n                      'icon__label-count',\n                      {\n                        'icon__label-count--display-none':\n                          totalItems === 0,\n                      },\n                    )}\n                  >\n                    {totalItems}\n                  </div>\n                </div>\n              </NavLink>\n            </div>\n          </div>\n\n          <div className=\"header__onMobile\">\n            {isSearchBarActive && (\n              <SearchBar\n                className=\"header__search-bar\"\n                sectionName={namePage}\n              />\n            )}\n            <button\n              className=\"header__menu\"\n              onClick={toggleMenu}\n            >\n              <div className=\"icon icon__menu\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n};\n","import React from 'react';\nimport './Main.scss';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const Main: React.FC<Props> = ({ children }) => (\n  <main className=\"main\">\n    {children}\n  </main>\n);\n","export const getUniqueId = () => Math.random();\n","/* eslint-disable react/button-has-type */\nimport React, { useContext } from 'react';\nimport classNames from 'classnames';\n\nimport { Product } from '../../types/Product';\nimport './ProductCard.scss';\nimport { ProductsContext } from '../ProductsContext';\n\ntype Props = {\n  product: Product,\n};\n\nexport const ProductCard: React.FC<Props> = ({ product }) => {\n  const {\n    favorites,\n    setFavorites,\n    carts,\n    setCarts,\n  } = useContext(ProductsContext);\n\n  const isFavorite\n    = favorites.find(productCurrent => productCurrent.id === product.id);\n\n  const isCart\n    = carts.find(productCurrent => productCurrent.id === product.id);\n\n  const labelAddCartBtn = isCart ? 'Added to cart' : 'Add to cart';\n\n  const hableFavoriteBtn = () => {\n    if (!favorites.find(productCurrent => productCurrent.id === product.id)) {\n      setFavorites([...favorites, product]);\n    } else {\n      const newFavorites\n        = favorites.filter(productCurrent => productCurrent.id !== product.id);\n\n      setFavorites(newFavorites);\n    }\n  };\n\n  const hableAddCartBtn = () => {\n    if (!carts.find(productCurrent => productCurrent.id === product.id)) {\n      setCarts([...carts, { ...product, quantity: 1 }]);\n    } else {\n      const newCarts\n        = carts.filter(productCurrent => productCurrent.id !== product.id);\n\n      setCarts(newCarts);\n    }\n  };\n\n  return (\n    <article className=\"product-cards\">\n      <img\n        src={`./new/${product.image}`}\n        alt={product.name}\n        className=\"product-cards__img\"\n      />\n\n      <div className=\"product-cards__header\">\n        <h3 className=\"product-cards__title\">\n          {product.name}\n        </h3>\n\n        <div className=\"product-cards__prices\">\n          <p className=\"product-cards__new-price\">\n            {`$${product.price}`}\n          </p>\n\n          <p className=\"product-cards__old-price\">\n            {`$${product.fullPrice}`}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"product-cards__separetor\" />\n\n      <div className=\"product-cards__specifications\">\n        <div className=\"product-cards__specification\">\n          <p className=\"product-cards__specification-title\">\n            Screen\n          </p>\n\n          <p className=\"product-cards__specification-value\">\n            {product.screen}\n          </p>\n        </div>\n\n        <div className=\"product-cards__specification\">\n          <p className=\"product-cards__specification-title\">\n            Capacity\n          </p>\n\n          <p className=\"product-cards__specification-value\">\n            {product.capacity}\n          </p>\n        </div>\n\n        <div className=\"product-cards__specification\">\n          <p className=\"product-cards__specification-title\">\n            RAM\n          </p>\n\n          <p className=\"product-cards__specification-value\">\n            {product.ram}\n          </p>\n        </div>\n      </div>\n\n      <div className=\"product-cards__add-panel\">\n        <button\n          onClick={hableAddCartBtn}\n          className={classNames(\n            'product-cards__btn-cart',\n            'button button__primary',\n            {\n              'button__primary--active': isCart,\n            },\n          )}\n        >\n          {labelAddCartBtn}\n        </button>\n\n        <button\n          onClick={hableFavoriteBtn}\n          className=\"product-cards__btn-favorite button\"\n        >\n          <div className={\n            classNames(\n              'icon',\n              'icon__favorites',\n              {\n                'icon__favorites--active': isFavorite,\n              },\n            )\n          }\n          />\n        </button>\n      </div>\n    </article>\n  );\n};\n","/* eslint-disable react/button-has-type */\nimport classNames from 'classnames';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport './ProductsSlider.scss';\nimport { Product } from '../../types/Product';\nimport { getUniqueId } from '../../helpers/getFunctions/getUniqueld';\nimport { ProductCard } from '../ProductCard';\n\ntype Props = {\n  title: string,\n  products: Product[],\n};\n\nexport const ProductsSlider: React.FC<Props> = ({ title, products }) => {\n  const [index, setIndex] = useState(0);\n  const [offsetX, setOffsetX] = useState(0);\n  const slideWidth = 272;\n  const [countProducts, setCountProducts] = useState(0);\n\n  const productSlideRef = useRef<HTMLLIElement | null>(null);\n\n  const updateSlide = (newOffsetX: number, newIndex: number) => {\n    setOffsetX(newOffsetX);\n\n    setIndex(newIndex);\n  };\n\n  const handlePrevBtn = () => {\n    const newIndex = index - 1;\n\n    updateSlide(-newIndex * (slideWidth + 16), newIndex);\n  };\n\n  const handleNextBtn = () => {\n    const newIndex = index + 1;\n\n    updateSlide(-newIndex * (slideWidth + 16), newIndex);\n  };\n\n  useEffect(() => {\n    switch (true) {\n      case window.innerWidth >= 1440:\n        setCountProducts(4);\n        break;\n\n      case window.innerWidth >= 1234:\n        setCountProducts(3);\n        break;\n\n      case window.innerWidth >= 620:\n        setCountProducts(2);\n        break;\n\n      default:\n        setCountProducts(1);\n    }\n  }, [window.innerWidth]);\n\n  return (\n    <section className=\"main__products-slider products-slider\">\n      <div className=\"container\">\n        <div className=\"products-slider__content\">\n          <div className=\"products-slider__top-bar\">\n            <h2 className=\"products-slider__title\">\n              {title}\n            </h2>\n\n            <div className=\"products-slider__control-panel\">\n              <button\n                className={classNames(\n                  'products-slider__btn',\n                  'button',\n                  { 'button--disable': index === 0 },\n                )}\n                onClick={handlePrevBtn}\n                disabled={index === 0}\n              >\n                <div\n                  className=\"\n                    icon\n                    icon__arrow-primary\"\n                />\n              </button>\n\n              <button\n                className={classNames(\n                  'products-slider__btn',\n                  'button',\n                  {\n                    'button--disable':\n                      index === products.length - countProducts,\n                  },\n                )}\n                onClick={handleNextBtn}\n                disabled={index === products.length - countProducts}\n              >\n                <div\n                  className=\"\n                    icon\n                    icon__arrow-primary\n                    icon__arrow-primary--rigth\"\n                />\n              </button>\n            </div>\n          </div>\n\n          <div className=\"products-slider__slides\">\n            <ul\n              className=\"products-slider__list\"\n              data-cy=\"cardsContainer\"\n              style={{\n                transform: `translateX(${offsetX}px)`,\n              }}\n            >\n              {\n                products.map(product => (\n                  <li\n                    key={getUniqueId()}\n                    className=\"products-slider__slide\"\n                    ref={productSlideRef}\n                  >\n                    <ProductCard product={product} />\n                  </li>\n                ))\n              }\n            </ul>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import { Product } from '../types/Product';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_phone-catalog/_new/products.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getProducts(): Promise<Product[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Product } from '../../types/Product';\n\nconst AMOUNT_PRICE = 80;\n\nexport const getHotProducts = (productsFromServer: Product[]) => {\n  const productsWithDiscount = productsFromServer.filter(product => (\n    product.fullPrice - product.price >= AMOUNT_PRICE\n  ));\n\n  return productsWithDiscount.sort((productFirst, productSecond) => {\n    const amountFirst = productFirst.fullPrice - productFirst.price;\n    const amountSecond = productSecond.fullPrice - productSecond.price;\n\n    return amountSecond - amountFirst;\n  });\n};\n","/* eslint-disable react/button-has-type */\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport './ImageSlider.scss';\nimport { getUniqueId } from '../../helpers/getFunctions/getUniqueld';\n\nexport const ImageSlider: React.FC = () => {\n  const images = [\n    './new/img/banner-phones.png',\n    './new/img/banner-tablets.png',\n    './new/img/banner-accessories.png',\n  ];\n\n  const [index, setIndex] = useState(1);\n  const [offsetX, setOffsetX] = useState(0);\n\n  const updateSlide = (newOffsetX: number, newIndex: number) => {\n    setOffsetX(newOffsetX);\n\n    setIndex(newIndex);\n  };\n\n  const handlePrevBtn = () => {\n    updateSlide(offsetX + 100, index - 1);\n  };\n\n  const handleNextBtn = () => {\n    updateSlide(offsetX - 100, index + 1);\n  };\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      if (index === 3) {\n        updateSlide(0, 1);\n      } else {\n        handleNextBtn();\n      }\n    }, 5000);\n\n    return () => clearInterval(intervalId);\n  }, [index]);\n\n  return (\n    <section className=\"main__slider slider\">\n      <div className=\"container\">\n        <div className=\"slider__content\">\n          <button\n            onClick={handlePrevBtn}\n            className={classNames(\n              'slider__btn',\n              'button button--onTable-turnOn',\n              { 'button--disable': index === 1 },\n            )}\n            disabled={index === 1}\n          >\n            <div className=\"icon icon__arrow-primary\" />\n          </button>\n\n          <div className=\"slider__slides\">\n            <ul\n              className=\"slider__list\"\n              style={{\n                transform: `translateX(${offsetX}%)`,\n              }}\n            >\n              {\n                images.map(image => (\n                  <li\n                    key={getUniqueId()}\n                    className=\"slider__slide\"\n                  >\n                    <img\n                      src={image}\n                      alt={image}\n                      className=\"slider__img\"\n                    />\n                  </li>\n                ))\n              }\n            </ul>\n          </div>\n\n          <button\n            className={classNames(\n              'slider__btn',\n              'button button--onTable-turnOn',\n              { 'button--disable': index === 3 },\n            )}\n            onClick={handleNextBtn}\n            disabled={index === 3}\n          >\n            <div\n              className=\"\n              icon\n              icon__arrow-primary\n              icon__arrow-primary--rigth\"\n            />\n          </button>\n\n          <div className=\"slider__points\">\n            <button\n              onClick={() => updateSlide(0, 1)}\n              className=\"slider__btn-point\"\n            >\n              <div\n                className={classNames(\n                  'slider__point',\n                  { 'slider__point--isActive': index === 1 },\n                )}\n              />\n            </button>\n\n            <button\n              onClick={() => updateSlide(-100, 2)}\n              className=\"slider__btn-point\"\n            >\n              <div\n                className={classNames(\n                  'slider__point',\n                  { 'slider__point--isActive': index === 2 },\n                )}\n              />\n            </button>\n\n            <button\n              onClick={() => updateSlide(-200, 3)}\n              className=\"slider__btn-point\"\n            >\n              <div\n                className={classNames(\n                  'slider__point',\n                  { 'slider__point--isActive': index === 3 },\n                )}\n              />\n            </button>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import { Product } from '../../types/Product';\n\nexport const getProductsByType = (\n  productsFromServer: Product[],\n  type: string,\n) => {\n  return productsFromServer.filter(product => (\n    product.category === type\n  ));\n};\n","import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './CategoryCard.scss';\nimport { Category } from '../../types/Category';\nimport { getProducts } from '../../api/getProducts';\nimport { getProductsByType }\n  from '../../helpers/getFunctions/getProductsByType';\n\ntype Props = {\n  category: Category,\n};\n\nexport const CategoryCard: React.FC<Props> = ({ category }) => {\n  const [count, setCount] = useState(0);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    getProducts().then((productsFromServer) => {\n      if (isMounted) {\n        setCount(getProductsByType(productsFromServer, category.type).length);\n      }\n    });\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  return (\n    <NavLink\n      className=\"category-card\"\n      to={category.link}\n    >\n      <div\n        className=\"category-card__wrapper-img\"\n        style={{\n          backgroundColor: category.backgroundColor,\n        }}\n      >\n        <img\n          src={category.imageUrl}\n          alt={category.name}\n          className={classNames('category-card__img', {\n            'category-card__img--transform-scale':\n              category.name === 'Accessories',\n          })}\n        />\n      </div>\n\n      <div className=\"category-card__bottom\">\n        <h3 className=\"category-card__name\">\n          {category.name}\n        </h3>\n\n        <p className=\"category-card__available\">\n          {`${count} models`}\n        </p>\n      </div>\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport './ShopByCategory.scss';\nimport { CategoryCard } from '../CategoryCard';\nimport { getUniqueId } from '../../helpers/getFunctions/getUniqueld';\n\nexport const ShopByCategory: React.FC = () => {\n  const categorys = [\n    {\n      name: 'Mobile phones',\n      type: 'phones',\n      backgroundColor: '#fcdbc1',\n      link: '/phones',\n      imageUrl: './new/img/category-phones.png',\n    },\n    {\n      name: 'Tablets',\n      type: 'tablets',\n      backgroundColor: '#8d8d92',\n      link: '/tablets',\n      imageUrl: './new/img/category-tablets.png',\n    },\n    {\n      name: 'Accessories',\n      type: 'accessories',\n      backgroundColor: '#973d5f',\n      link: '/accessories',\n      imageUrl: './new/img/category-accessories.png',\n    },\n  ];\n\n  return (\n    <section className=\"main__shop-by-category shop-by-category\">\n      <div className=\"container\">\n        <div className=\"shop-by-category__content\">\n          <h2 className=\"shop-by-category__title\">\n            Shop by category\n          </h2>\n\n          <ul\n            data-cy=\"categoryLinksContainer\"\n            className=\"shop-by-category__list\"\n          >\n            {\n              categorys.map(category => (\n                <li\n                  key={getUniqueId()}\n                  className=\"shop-by-category__item\"\n                >\n                  <CategoryCard category={category} />\n                </li>\n              ))\n            }\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\n\nimport { Main } from '../../components/Main';\n\nimport './HomePage.scss';\nimport { ProductsSlider } from '../../components/ProductsSlider';\nimport { getProducts } from '../../api/getProducts';\nimport { Product } from '../../types/Product';\nimport { getHotProducts } from '../../helpers/getFunctions/getHotPriceProducts';\nimport { ImageSlider } from '../../components/ImageSlider';\nimport { ShopByCategory } from '../../components/ShopByCategory';\nimport { getNewProducts } from '../../helpers/getFunctions/getNewProducts';\nimport { Loader } from '../../components/Loader';\n\nexport const HomePage: React.FC = () => {\n  const [hotPriceProducts, setHotPriceProducts] = useState<Product[]>([]);\n  const [newProducts, setNewProducts] = useState<Product[]>([]);\n\n  const [isLoadingHotProducts, setIsLoadingHotProducts] = useState(false);\n  const [isErrorHotProducts, setIsErrorHotProducts] = useState(false);\n\n  const [isLoadingNewProducts, setIsLoadingNewProducts] = useState(false);\n  const [isErrorNewProducts, setIsErrorNewProducts] = useState(false);\n\n  useEffect(() => {\n    setIsLoadingHotProducts(true);\n    setIsErrorHotProducts(false);\n\n    getProducts()\n      .then(productsFromServer => (\n        setHotPriceProducts(getHotProducts(productsFromServer))\n      ))\n      .catch(() => setIsErrorHotProducts(true))\n      .finally(() => setIsLoadingHotProducts(false));\n  }, []);\n\n  useEffect(() => {\n    setIsLoadingNewProducts(true);\n    setIsErrorNewProducts(false);\n\n    getProducts()\n      .then(productsFromServer => (\n        setNewProducts(getNewProducts(productsFromServer))\n      ))\n      .catch(() => setIsErrorNewProducts(true))\n      .finally(() => setIsLoadingNewProducts(false));\n  }, []);\n\n  const getSlider = (\n    products: Product[],\n    title: string,\n    isLoading: boolean,\n    isError: boolean,\n  ) => {\n    if (isLoading) {\n      return <Loader />;\n    }\n\n    if (isError) {\n      return <p className=\"error\">Error</p>;\n    }\n\n    return <ProductsSlider title={title} products={products} />;\n  };\n\n  return (\n    <Main>\n      <ImageSlider />\n\n      {getSlider(\n        hotPriceProducts,\n        'Hot price',\n        isLoadingHotProducts,\n        isErrorHotProducts,\n      )}\n\n      <ShopByCategory />\n\n      {getSlider(\n        newProducts,\n        'Brand new models',\n        isLoadingNewProducts,\n        isErrorNewProducts,\n      )}\n    </Main>\n  );\n};\n","import { Product } from '../../types/Product';\n\nconst YEAR = 2019;\n\nexport const getNewProducts = (productsFromServer: Product[]) => {\n  const productsNew = productsFromServer.filter(product => (\n    product.year >= YEAR\n  ));\n\n  return productsNew.sort((productFirst, productSecond) => (\n    productFirst.price - productSecond.price\n  ));\n};\n","import { getUniqueId } from '../../helpers/getFunctions/getUniqueld';\nimport { Product } from '../../types/Product';\nimport { ProductCard } from '../ProductCard';\nimport './ProductsList.scss';\n\ntype Props = {\n  products: Product[]\n};\n\nexport const ProductsList: React.FC<Props> = ({ products }) => (\n  <ul\n    data-cy=\"cardsContainer\"\n    className=\"products-list__grid\"\n  >\n    {products.map(product => (\n      <li\n        key={getUniqueId()}\n        className=\"products-list__item\"\n      >\n        <ProductCard\n          product={product}\n        />\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport './NoResult.scss';\n\ntype Props = {\n  message: string,\n};\n\nexport const NoResult: React.FC<Props> = ({ message }) => (\n  <div className=\"no-result\">\n    <p className=\"no-result__message\">\n      {message}\n    </p>\n  </div>\n);\n","/* eslint-disable react/button-has-type */\nimport React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport './FilterPanel.scss';\nimport { Sort } from '../../types/Sort';\nimport {\n  SearchParams,\n  getSearchWith,\n} from '../../helpers/getFunctions/searchHelper';\nimport { getUniqueId } from '../../helpers/getFunctions/getUniqueld';\n\nconst optionsSort = ['Newest', 'Name', 'Cheapest'];\nconst optionsItemsNumber = ['16', '8', '4', 'All'];\n\nexport const FilterPanel: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  function setSearchWith(params: SearchParams) {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  }\n\n  const sort = (searchParams.get('sort') as Sort) || 'age';\n  const itemsNumber = searchParams.get('itemsOnPage') || '16';\n\n  const [sortLabel, setSortLabel] = useState('Newest');\n\n  const [isOpenSort, setIsOpenSort] = useState(false);\n  const [isOpenItems, setIsOpenItems] = useState(false);\n\n  const handleBtnSort = () => {\n    setIsOpenSort(!isOpenSort);\n  };\n\n  const handleSelectSort = (option: string) => {\n    const params: {\n      sort?: string;\n      page?: string;\n    } = {};\n\n    if (option === 'Cheapest') {\n      params.sort = 'price';\n    } else if (option === 'Name') {\n      params.sort = 'name';\n    } else {\n      params.sort = 'name';\n    }\n\n    params.page = '1';\n\n    setSearchWith(params);\n    setSortLabel(option);\n    setIsOpenSort(false);\n  };\n\n  const handleBtnItemsNumber = () => {\n    setIsOpenItems(!isOpenItems);\n  };\n\n  const handleSelectItemsNumber = (option: string) => {\n    setSearchWith({\n      itemsOnPage: option,\n      page: '1',\n    });\n\n    setIsOpenItems(false);\n  };\n\n  return (\n    <div className=\"search-panel\">\n      <div className=\"search-panel__btn-wrapper\">\n        <p className=\"search-panel__btn-label\">\n          Sort by\n        </p>\n        <button\n          onMouseDown={handleBtnSort}\n          onBlur={() => setIsOpenSort(false)}\n          className=\"search-panel__btn button\"\n        >\n          <div\n            className=\"\n              search-panel__btn-value\n              search-panel__btn-value--sort\n            \"\n          >\n            {sortLabel}\n          </div>\n\n          <div className={classNames('icon', {\n            'icon__arrow-secondary': !isOpenSort,\n            'icon__arrow-primary icon__arrow-primary--top': isOpenSort,\n          })}\n          />\n        </button>\n\n        {isOpenSort && (\n          <ul className=\"search-panel__dropdown-menu\">\n            {optionsSort.map((option) => (\n              <li\n                key={getUniqueId()}\n                className=\"search-panel__dropdown-menu-item\"\n              >\n                <button\n                  onMouseDown={(e) => {\n                    e.preventDefault();\n                    handleSelectSort(option);\n                  }}\n                  className=\"search-panel__btn-option\"\n                >\n                  <div className={classNames(\n                    'search-panel__option-value',\n                    {\n                      'search-panel__option-value--selected':\n                        option === sort,\n                    },\n                  )}\n                  >\n                    {option}\n                  </div>\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n\n      <div className=\"search-panel__btn-wrapper\">\n        <p className=\"search-panel__btn-label\">\n          Items on page\n        </p>\n        <button\n          onMouseDown={handleBtnItemsNumber}\n          onBlur={() => setIsOpenItems(false)}\n          className=\"search-panel__btn button\"\n        >\n          <div\n            className=\"\n      search-panel__btn-value\n      search-panel__btn-value--itemsNumber\n    \"\n          >\n            {itemsNumber}\n          </div>\n\n          <div className={classNames('icon', {\n            'icon__arrow-secondary': !isOpenItems,\n            'icon__arrow-primary icon__arrow-primary--top': isOpenItems,\n          })}\n          />\n        </button>\n\n        {isOpenItems && (\n          <ul className=\"search-panel__dropdown-menu\">\n            {optionsItemsNumber.map(option => (\n              <li\n                key={getUniqueId()}\n                className=\"search-panel__dropdown-menu-item\"\n              >\n                <button\n                  onMouseDown={(e) => {\n                    e.preventDefault();\n                    handleSelectItemsNumber(option);\n                  }}\n                  className=\"search-panel__btn-option\"\n                >\n                  <div className={classNames(\n                    'search-panel__option-value',\n                    {\n                      'search-panel__option-value--selected':\n                        option === itemsNumber,\n                    },\n                  )}\n                  >\n                    {option}\n                  </div>\n                </button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { getUniqueId } from '../../helpers/getFunctions/getUniqueld';\n\nimport './NavMap.scss';\n\nexport const NavMap = () => {\n  const location = useLocation();\n  const links = location.pathname.split('/')[1].split('?')[0].split('/');\n\n  const nameLinks = links.map(link => {\n    const linkWords = link.split('-');\n\n    if (linkWords.length !== 0) {\n      return linkWords.map(linkWord => (\n        linkWord.charAt(0).toUpperCase() + linkWord.slice(1)\n      )).join(' ');\n    }\n\n    return link.charAt(0).toUpperCase() + link.slice(1);\n  });\n\n  return (\n    <nav className=\"nav-map\">\n      <NavLink\n        className=\"nav-map__link\"\n        to=\"/\"\n      >\n        <div className=\"icon icon__home\" />\n      </NavLink>\n\n      {links.map((link, index) => (\n        <React.Fragment key={getUniqueId()}>\n          <div\n            className=\"icon icon__arrow-secondary icon__arrow-secondary--rigth\"\n          />\n          {index !== links.length - 1 ? (\n            <NavLink\n              className=\"nav-map__link\"\n              to={`/${link}`}\n              key={getUniqueId()}\n            >\n              {nameLinks[index]}\n            </NavLink>\n          ) : (\n            <p\n              className=\"nav-map__label\"\n              key={getUniqueId()}\n            >\n              {nameLinks[index]}\n            </p>\n          )}\n        </React.Fragment>\n      ))}\n    </nav>\n  );\n};\n","import React from 'react';\nimport { NavMap } from '../NavMap';\n\nimport './ProductsHeader.scss';\n\ntype Props = {\n  title: string,\n  length: number,\n};\n\nexport const ProductsHeader: React.FC<Props> = ({ title, length }) => (\n  <div className=\"products-header\">\n    <NavMap />\n\n    <h1 className=\"products-header__title\">\n      {title}\n    </h1>\n\n    <p className=\"products-header__subtitle\">\n      {`${length} models`}\n    </p>\n  </div>\n);\n","/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { getUniqueId } from '../../helpers/getFunctions/getUniqueld';\nimport {\n  SearchParams,\n  getSearchWith,\n} from '../../helpers/getFunctions/searchHelper';\nimport './PageControl.scss';\n\ntype Props = {\n  length: number,\n};\n\nexport const PageControl: React.FC<Props> = ({ length }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  function setSearchWith(params: SearchParams) {\n    const search = getSearchWith(searchParams, params);\n\n    setSearchParams(search);\n  }\n\n  const itemsNumber = searchParams.get('itemsOnPage') || '16';\n  const page = searchParams.get('page') || '1';\n\n  const countPages = Math.ceil(length / +itemsNumber)\n    || false;\n\n  const getVisblePages = () => {\n    const pages: number[] = [];\n\n    if (!countPages) {\n      return pages;\n    }\n\n    for (let i = 1; i <= countPages; i += 1) {\n      pages.push(i);\n    }\n\n    if (+page >= 4 && +page !== pages.length) {\n      return pages.slice(+page - 3, +page + 1);\n    }\n\n    if (+page === pages.length && +page !== 3) {\n      return pages.slice(pages.length - 4, pages.length);\n    }\n\n    return pages.slice(0, 4);\n  };\n\n  const toTopPage = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  const handleBtnPrevPage = () => {\n    setSearchWith({ page: `${+page - 1}` });\n    toTopPage();\n  };\n\n  const handleBtnNextPage = () => {\n    setSearchWith({ page: `${+page + 1}` });\n    toTopPage();\n  };\n\n  const handleBtnPage = (currentPage: number) => {\n    setSearchWith({ page: `${currentPage}` });\n    toTopPage();\n  };\n\n  const visblePages = getVisblePages();\n\n  return (\n    <div className=\"page-controls\">\n      <button\n        onClick={handleBtnPrevPage}\n        className={classNames(\n          'page-controls__btn-control-page',\n          'button',\n          { 'button--disable': +page === 1 },\n        )}\n        disabled={+page === 1}\n      >\n        <div className=\"icon icon__arrow-primary\" />\n      </button>\n\n      <ul className=\"page-controls__pages-list\">\n        {visblePages.map(pageValue => (\n          <li\n            key={getUniqueId()}\n            className=\"page-controls__page-item\"\n          >\n            <button\n              onClick={() => handleBtnPage(pageValue)}\n              className={classNames(\n                'page-controls__btn-page',\n                'button',\n                {\n                  'page-controls__btn-page--active':\n                    +page === pageValue,\n                },\n              )}\n            >\n              {pageValue}\n            </button>\n          </li>\n        ))}\n      </ul>\n\n      <button\n        onClick={handleBtnNextPage}\n        className={classNames(\n          'page-controls__btn-control-page',\n          'button',\n          { 'button--disable': +page === countPages },\n        )}\n        disabled={countPages === +page}\n      >\n        <div\n          className=\"\n          icon icon__arrow-primary\n          icon__arrow-primary--rigth\n        \"\n        />\n      </button>\n    </div>\n  );\n};\n","/* eslint-disable react/button-has-type */\nimport { useSearchParams } from 'react-router-dom';\nimport { Product } from '../../types/Product';\nimport { getPreparitionProducts }\n  from '../../helpers/getFunctions/getPreparitionProducts';\nimport { ProductsList } from '../ProductsList';\nimport { NoResult } from '../NoResult';\nimport { FilterPanel } from '../FilterPanel';\nimport { ProductsHeader } from '../ProductsHeader';\nimport { PageControl } from '../PageControl';\n\ntype Props = {\n  products: Product[],\n  title: string,\n};\n\nexport const ProductsCatalog: React.FC<Props> = ({ products, title }) => {\n  const [searchParams] = useSearchParams();\n  const page = searchParams.get('page') || '1';\n  const itemsNumber = searchParams.get('itemsOnPage') || '16';\n\n  const sortedProducts = getPreparitionProducts(products, searchParams);\n\n  const start = (+page - 1) * (+itemsNumber) || 0;\n  const end = (+page - 1) * (+itemsNumber) + (+itemsNumber) || products.length;\n\n  const visibleProducts = sortedProducts.slice(start, end);\n\n  const countPages = Math.ceil(sortedProducts.length / +itemsNumber)\n    || false;\n\n  return (\n    <div className=\"products-catalog\">\n      <div className=\"products-catalog__header\">\n        <ProductsHeader\n          title={title}\n          length={products.length}\n        />\n      </div>\n\n      {visibleProducts.length ? (\n        <>\n          <FilterPanel />\n\n          <ProductsList\n            products={visibleProducts}\n            data-cy=\"productList\"\n          />\n\n          {\n            (countPages && countPages !== 1) && (\n              <PageControl length={sortedProducts.length} />\n            )\n          }\n        </>\n      ) : (\n        <NoResult message=\"There are no products on this page\" />\n      )}\n    </div>\n  );\n};\n","import { Product } from '../../types/Product';\nimport { Sort } from '../../types/Sort';\n\nexport const getPreparitionProducts = (\n  products: Product[],\n  searchParams: URLSearchParams,\n) => {\n  const sort = (searchParams.get('sort') as Sort) || 'age';\n  const query = searchParams.get('query') || '';\n\n  return (\n    products.sort((productFirst, productSecond) => {\n      if (sort === 'name') {\n        return productFirst[sort].localeCompare(productSecond[sort]);\n      }\n\n      if (sort === 'year') {\n        return productSecond[sort] - productFirst[sort];\n      }\n\n      return productFirst[sort] - productSecond[sort];\n    })\n      .filter(product => (\n        product.name\n          .toLocaleLowerCase()\n          .includes(query.toLocaleLowerCase().trim())\n      ))\n\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getProductsByType }\n  from '../../helpers/getFunctions/getProductsByType';\nimport { Product } from '../../types/Product';\nimport { getProducts } from '../../api/getProducts';\nimport { Loader } from '../../components/Loader';\nimport { ProductsCatalog } from '../../components/ProductsCatalog';\n\nimport './PhonesPage.scss';\n\nexport const PhonesPage: React.FC = () => {\n  const [phones, setPhones] = useState<Product[]>([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getProducts()\n      .then(productsFromServer => (\n        setPhones(getProductsByType(productsFromServer, 'phones'))\n      ))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const getPhones = (\n    products: Product[],\n    title: string,\n  ) => {\n    if (isLoading) {\n      return (\n        <div className=\"phones__loading\">\n          <Loader />\n        </div>\n      );\n    }\n\n    if (isError) {\n      return (\n        <p className=\"favorites__error\">\n          There was an error, please try again later\n        </p>\n      );\n    }\n\n    return <ProductsCatalog products={products} title={title} />;\n  };\n\n  return (\n    <div className=\"main__phones phones\">\n      <div className=\"container\">\n        <div className=\"phones__content\">\n          {getPhones(\n            phones,\n            'Mobile phones',\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Product } from '../../types/Product';\nimport { getProducts } from '../../api/getProducts';\nimport { getProductsByType }\n  from '../../helpers/getFunctions/getProductsByType';\nimport { Loader } from '../../components/Loader';\nimport { ProductsCatalog } from '../../components/ProductsCatalog';\n\nimport './TabletsPage.scss';\n\nexport const TabletsPage: React.FC = () => {\n  const [tablets, setTablets] = useState<Product[]>([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getProducts()\n      .then(productsFromServer => (\n        setTablets(getProductsByType(productsFromServer, 'tablets'))\n      ))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const getTablets = (\n    products: Product[],\n    title: string,\n  ) => {\n    if (isLoading) {\n      return (\n        <div className=\"tablets__loading\">\n          <Loader />\n        </div>\n      );\n    }\n\n    if (isError) {\n      return (\n        <p className=\"favorites__error\">\n          There was an error, please try again later\n        </p>\n      );\n    }\n\n    return <ProductsCatalog products={products} title={title} />;\n  };\n\n  return (\n    <div className=\"main__tablets tablets\">\n      <div className=\"container\">\n        <div className=\"tablets__content\">\n          {getTablets(\n            tablets,\n            'Tablets',\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Product } from '../../types/Product';\nimport { getProducts } from '../../api/getProducts';\nimport { getProductsByType }\n  from '../../helpers/getFunctions/getProductsByType';\nimport { Loader } from '../../components/Loader';\nimport { ProductsCatalog } from '../../components/ProductsCatalog';\n\nimport './AccessoriesPage.scss';\n\nexport const AccessoriesPage: React.FC = () => {\n  const [accessories, setAccessories] = useState<Product[]>([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getProducts()\n      .then(productsFromServer => (\n        setAccessories(getProductsByType(productsFromServer, 'accessories'))\n      ))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const getAccessories = (\n    products: Product[],\n    title: string,\n  ) => {\n    if (isLoading) {\n      return (\n        <div className=\"accessories__loading\">\n          <Loader />\n        </div>\n      );\n    }\n\n    if (isError) {\n      return (\n        <p className=\"favorites__error\">\n          There was an error, please try again later\n        </p>\n      );\n    }\n\n    return <ProductsCatalog products={products} title={title} />;\n  };\n\n  return (\n    <div className=\"main__accessories accessories\">\n      <div className=\"container\">\n        <div className=\"accessories__content\">\n          {getAccessories(\n            accessories,\n            'Accessories',\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1>NotFoundPage</h1>\n);\n","/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Footer.scss';\n\nexport const Footer: React.FC = () => {\n  const handleTopButton = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <footer className=\"main__footer footer\">\n      <div className=\"container\">\n        <div className=\"footer__content\">\n          <NavLink\n            className=\"footer__logo-link\"\n            to=\"/\"\n          >\n            <div className=\"footer__logo icon-logo\" />\n          </NavLink>\n\n          <nav className=\"footer__social-links\">\n            <a\n              href=\"https://github.com/ydem1\"\n              className=\"footer__link\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              Git hub\n            </a>\n\n            <a\n              href=\"https://github.com/ydem1\"\n              className=\"footer__link\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              Contacts\n            </a>\n\n            <a\n              href=\"https://github.com/ydem1\"\n              className=\"footer__link\"\n              rel=\"noreferrer\"\n              target=\"_blank\"\n            >\n              Rights\n            </a>\n          </nav>\n\n          <div className=\"footer__wrapper-top-btn\">\n            <p className=\"footer__top-btn-label\">Back to top</p>\n            <button\n              className=\"footer__top-btn button\"\n              onClick={handleTopButton}\n            >\n              <div\n                className=\"icon icon__arrow-primary icon__arrow-primary--top\"\n              />\n            </button>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n","/* eslint-disable react/button-has-type */\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { NavBar } from '../NavBar';\nimport './Menu.scss';\nimport { ProductsContext } from '../ProductsContext';\n\ntype Props = {\n  toggleMenu: () => void,\n};\n\nexport const Menu: React.FC<Props> = ({ toggleMenu }) => {\n  const { favorites, carts } = useContext(ProductsContext);\n\n  return (\n    <aside className=\"App__menu menu\">\n      <div className=\"menu__content\">\n        <div className=\"menu__top-bar\">\n          <NavLink\n            className=\"menu__logo\"\n            to=\"/\"\n          >\n            <div className=\"icon-logo\" />\n          </NavLink>\n\n          <button\n            onClick={toggleMenu}\n            className=\"menu__btn-close\"\n          >\n            <div className=\"icon icon__close\" />\n          </button>\n        </div>\n\n        <NavBar toggleMenu={toggleMenu} />\n\n        <div className=\"menu__favorites-cart-wrapper\">\n          <NavLink\n            onClick={toggleMenu}\n            className={({ isActive }) => (\n              classNames('menu__link', {\n                'menu__link--is-active': isActive,\n              })\n            )}\n            to=\"/favorites\"\n          >\n            <div className=\"icon icon__favorites\">\n              <div\n                className={classNames(\n                  'icon__label-count',\n                  {\n                    'icon__label-count--display-none':\n                      favorites.length === 0,\n                  },\n                )}\n              >\n                {favorites.length}\n              </div>\n            </div>\n          </NavLink>\n\n          <NavLink\n            onClick={toggleMenu}\n            className={({ isActive }) => (\n              classNames('menu__link', {\n                'menu__link--is-active': isActive,\n              })\n            )}\n            to=\"/cart\"\n          >\n            <div className=\"icon icon__cart\">\n              <div\n                className={classNames(\n                  'icon__label-count',\n                  {\n                    'icon__label-count--display-none':\n                      carts.length === 0,\n                  },\n                )}\n              >\n                {carts.length}\n              </div>\n            </div>\n          </NavLink>\n        </div>\n      </div>\n    </aside>\n  );\n};\n","import React, { useContext } from 'react';\n\nimport './FavoritesPage.scss';\nimport { ProductsContext } from '../../components/ProductsContext';\nimport { ProductsList } from '../../components/ProductsList';\nimport { ProductsHeader } from '../../components/ProductsHeader';\nimport { NoResult } from '../../components/NoResult';\n\nexport const FavoritesPage: React.FC = () => {\n  const { favorites } = useContext(ProductsContext);\n\n  return (\n    <div className=\"main__favorites favorites\">\n      <div className=\"container\">\n        <div className=\"favorites__content\">\n          <ProductsHeader\n            title=\"Favorites\"\n            length={favorites.length}\n          />\n          {\n            favorites.length ? (\n              <ProductsList\n                products={favorites}\n                data-cy=\"productList\"\n              />\n            ) : (\n              <NoResult message=\"Your favorites is empty\" />\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n","/* eslint-disable react/button-has-type */\nimport React, { useContext } from 'react';\nimport './CartCard.scss';\nimport classNames from 'classnames';\nimport { ProductsContext } from '../ProductsContext';\nimport { CartProduct } from '../../types/CartProduct';\n\ntype Props = {\n  product: CartProduct,\n};\n\nexport const CartCard: React.FC<Props> = ({ product }) => {\n  const { carts, setCarts } = useContext(ProductsContext);\n\n  const handleDeleteBtn = () => {\n    const newCarts\n      = carts.filter(productCurrent => productCurrent.id !== product.id);\n\n    setCarts(newCarts);\n  };\n\n  const handleMinusBtn = () => {\n    setCarts(prevCarts => {\n      const updatedCarts = prevCarts.map(cartProduct => (\n        cartProduct.id === product.id\n          ? { ...cartProduct, quantity: cartProduct.quantity - 1 }\n          : cartProduct\n      ));\n\n      return updatedCarts;\n    });\n  };\n\n  const handlePlusBtn = () => {\n    setCarts(prevCarts => {\n      const updatedCarts = prevCarts.map(cartProduct => (\n        cartProduct.id === product.id\n          ? { ...cartProduct, quantity: cartProduct.quantity + 1 }\n          : cartProduct\n      ));\n\n      return updatedCarts;\n    });\n  };\n\n  return (\n    <article className=\"cart-card\">\n      <div className=\"cart-card__left-section\">\n        <button\n          onClick={handleDeleteBtn}\n          className=\"cart-card__delete-btn\"\n        >\n          <div className=\"icon icon__close\" />\n        </button>\n\n        <img\n          src={`./new/${product.image}`}\n          alt={product.name}\n          className=\"cart-card__img\"\n        />\n\n        <p className=\"cart-card__name\">\n          {product.name}\n        </p>\n      </div>\n\n      <div className=\"cart-card__rigth-section\">\n        <div className=\"cart-card__count-contoller\">\n          <button\n            className={classNames(\n              'cart-card__contoller-btn',\n              'button',\n              { 'button--disable': product.quantity === 1 },\n            )}\n            onClick={handleMinusBtn}\n            disabled={product.quantity === 1}\n          >\n            <div className=\"icon icon__minus\" />\n          </button>\n\n          <p className=\"cart-card__count\">\n            {product.quantity}\n          </p>\n\n          <button\n            className={classNames(\n              'cart-card__contoller-btn',\n              'button',\n              // { 'button--disable': product.quantity === 1 },\n            )}\n            onClick={handlePlusBtn}\n          // disabled={product.quantity === 1}\n          >\n            <div className=\"icon icon__plus\" />\n          </button>\n        </div>\n\n        <p className=\"cart-card__price\">\n          {`$${product.price}`}\n        </p>\n      </div>\n    </article>\n  );\n};\n","import React from 'react';\nimport './CartList.scss';\nimport { getUniqueId } from '../../helpers/getFunctions/getUniqueld';\nimport { CartCard } from '../CartCard';\nimport { CartProduct } from '../../types/CartProduct';\n\ntype Props = {\n  products: CartProduct[]\n};\n\nexport const CartList: React.FC<Props> = ({ products }) => (\n  <ul className=\"cart-list\">\n    {products.map(product => (\n      <li\n        key={getUniqueId()}\n        className=\"cart-list__item\"\n      >\n        <CartCard product={product} />\n      </li>\n    ))}\n  </ul>\n);\n","/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport './CartTotalBar.scss';\n\ntype Props = {\n  totalPrice: number,\n  totalItems: number,\n  showMessage: React.Dispatch<React.SetStateAction<boolean>>,\n};\n\nexport const CartTotalBar: React.FC<Props> = (\n  {\n    totalPrice, totalItems, showMessage,\n  },\n) => {\n  const handleSubmitCheckout = () => {\n    showMessage(true);\n\n    setTimeout(() => {\n      showMessage(false);\n    }, 3000);\n  };\n\n  return (\n    <div className=\"cart-total-bar\">\n      <p className=\"cart-total-bar__total-price\">\n        {`$${totalPrice}`}\n      </p>\n\n      <p className=\"cart-total-bar__total-items\">\n        {`Total for ${totalItems} items`}\n      </p>\n\n      <div className=\"cart-total-bar__sepator\" />\n\n      <button\n        onClick={handleSubmitCheckout}\n        className=\"cart-total-bar__button-checkout button button__primary\"\n      >\n        Checkout\n      </button>\n    </div>\n  );\n};\n","import React, { useContext, useState } from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport './CartPage.scss';\nimport { ProductsContext } from '../../components/ProductsContext';\nimport { NoResult } from '../../components/NoResult';\nimport { CartList } from '../../components/CartList';\nimport { CartTotalBar } from '../../components/CartTotalBar';\n\nexport const CartPage: React.FC = () => {\n  const { carts } = useContext(ProductsContext);\n  const [isMessage, setIsMessage] = useState(false);\n\n  const totalPrice = carts.reduce(\n    (accumulator, currentItem) => (\n      accumulator + currentItem.price * currentItem.quantity\n    ), 0,\n  );\n\n  const totalItems = carts.reduce(\n    (accumulator, currentItem) => (\n      accumulator + currentItem.quantity\n    ), 0,\n  );\n\n  return (\n    <div className=\"main__cart cart\">\n      <div className=\"container\">\n        <div className=\"cart__content\">\n          <div className=\"cart__header\">\n            <NavLink\n              className=\"cart__link\"\n              to=\"/\"\n            >\n              <div\n                className=\"\n                  icon\n                  icon__arrow-primary\n                \"\n              />\n\n              Back\n            </NavLink>\n\n            <h1 className=\"cart__title\">\n              Cart\n            </h1>\n\n          </div>\n          {\n            carts.length ? (\n              <div className=\"cart__wrapper\">\n                <div className=\"cart__list\">\n                  <CartList\n                    products={carts}\n                    data-cy=\"productList\"\n                  />\n                </div>\n\n                <div className=\"cart__total-bar\">\n                  <CartTotalBar\n                    totalPrice={totalPrice}\n                    totalItems={totalItems}\n                    showMessage={setIsMessage}\n                  />\n                </div>\n\n                <p className={classNames(\n                  'cart__not-implement-message',\n                  {\n                    'cart__not-implement-message--active': isMessage,\n                  },\n                )}\n                >\n                  We are sorry, but this feature is not implemented yet\n                </p>\n              </div>\n            ) : (\n              <NoResult message=\"Your cart is empty\" />\n            )\n          }\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './App.scss';\nimport { Routes, Route } from 'react-router-dom';\nimport { Header } from './components/Header';\nimport { HomePage } from './pages/HomePage';\nimport { PhonesPage } from './pages/PhonesPage';\nimport { TabletsPage } from './pages/TabletsPage';\nimport { AccessoriesPage } from './pages/AccessoriesPage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Footer } from './components/Footer';\nimport { Menu } from './components/Menu';\nimport { FavoritesPage } from './pages/FavoritesPage';\nimport { ProductsProvider } from './components/ProductsContext';\nimport { CartPage } from './pages/CartPage';\n\nconst App = () => {\n  const toggleMenu = () => {\n    const appMenu = document.querySelector('.App__menu');\n\n    if (appMenu) {\n      appMenu.classList.toggle('App__menu--open');\n    }\n\n    document.body.classList.toggle('menu-open');\n  };\n\n  return (\n    <div className=\"App\">\n      <ProductsProvider>\n        <Header toggleMenu={toggleMenu} />\n        <Menu toggleMenu={toggleMenu} />\n\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/phones\" element={<PhonesPage />} />\n          <Route path=\"/tablets\" element={<TabletsPage />} />\n          <Route path=\"/accessories\" element={<AccessoriesPage />} />\n          <Route path=\"/favorites\" element={<FavoritesPage />} />\n          <Route path=\"/cart\" element={<CartPage />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </ProductsProvider>\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}